@using SocialBlog.Core.Services.Post.Models;

@model AllPostsQueryModel

<form method="get">
	<div class="row">
		<div style="padding: 0px 0px 20px 0px;" class="form-group col-md-2">
			<label></label>
			<input asp-for="SearchTerm" class="form-control" placeholder="Search in Blog" />
		</div>
		<div style="padding: 15px 0px 0px 0px;" class="col-md-3">
			<div class="form-group p-2">
				<input style="border-radius: 25px; border: 0px solid" type="submit" value="🔎" class="btn btn-outline-info" />
			</div>
		</div>
	</div>
</form>

@{
	var previousPage = Model.CurrentPage - 1;
	if (previousPage < 1)
	{
		previousPage = 1;
	}

	var maxPage = Math.Ceiling((double)Model.TotalPostsCount / AllPostsQueryModel.PostsPerPage);
}

@if (!Model.Posts.Any())
{
	<h2 class="text-center">No Post found</h2>
}

<div class="row">
	@foreach (var post in Model.Posts)
	{
		<partial name="_PostPartial" model="@post" />
	}
</div>

<div class="row mb-5">
	<div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
		<a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
		   asp-controller="Blog"
		   asp-action="All"
		   asp-route-currentPage="@previousPage"
		   asp-route-searchTerm="@Model.SearchTerm"><<</a>
	</div>

	@{
		var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
		!Model.Posts.Any();
	}
	<div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
		<a class="btn btn-primary
           @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
		   asp-controller="Blog"
		   asp-action="All"
		   asp-route-currentPage="@(Model.CurrentPage + 1)"
		   asp-route-searchTerm="@Model.SearchTerm">>></a>
	</div>
</div>
